<%init>
	my $request_path = $HTML::Mason::Commands::r->path_info;
	my $actions = PageMenu()->child('actions');
	my $follow_up_time = RT->Config->Get('TA_FollowUpTime') || '10:00:00';
	my @follow_up_days = RT->Config->Get('TA_FollowUpDays') || qw(1 3 10);
	my $path = '/' . RT->Config->Get('WebPath');

	return unless ($actions);

	if ( $request_path =~ m{^/Ticket/} ) {
		if ( ( $m->request_args->{'id'} || '' ) =~ /^(\d+)$/ ) {
			my $id  = $1;
			my $Ticket = RT::Ticket->new($session{'CurrentUser'});
			$Ticket->Load($id);
			return unless $Ticket->Id;

			if ($Ticket->CurrentUserHasRight('ModifyTicket')) {
				if ($Ticket->Status ne 'resolved') {
					$actions->child(rtx_quick_resolve =>
						title => loc('QuickResolve'),
						path => "Ticket/Display.html?id=$id&Status=resolved"
					);
				}
				if ($Ticket->Status ne 'stalled') {
					foreach my $fu_day (@follow_up_days) {
						my $date = RT::Date->new($session{'CurrentUser'});
						$date->SetToNow();
						$date->Set(Format => 'iso', Value => $date->Date() . ' ' . $follow_up_time);
						$date->AddDays($fu_day);
						$actions->child('rtx_actions_fu_' . $fu_day =>
							title => 'Follow Up (' . $fu_day . ' day' . ($fu_day > 1 ? 's' : ''). ')',
							path => "Ticket/Display.html?id=$id&Status=stalled&Due_Date=" . $date->ISO());
					}
				}
			}

			my $search = Menu()->child('search');
			if (defined $search) {
				my $tickets = $search->child('tickets');
				if (defined $tickets) {
					my $prev = $tickets->child('prev');
					if (defined $prev) {
						$actions->child('rtx_actions_prev' =>
							title => $prev->title =~ s/^[< ]+//r,
							path => $prev->path);
					}

					my $next = $tickets->child('next');
					if (defined $next) {
						$actions->child('rtx_actions_next' =>
							title => $next->title =~ s/[ >]+$//r,
							path => $next->path);
					}
				}
			}
		}
	}
</%init>
